apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  namespace: wave-test
  labels:
    app: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: postgres
        image: invalidimage:doesnotexist
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: POSTGRES_DB
          value: "appdb"
        ports:
        - containerPort: 5432
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10   # wait before first probe
          periodSeconds: 5          # check every 5 seconds
          failureThreshold: 6       # fail after 30s
          successThreshold: 1       # 1 success = ready

---
apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: wave-test
  labels:
    app: database
spec:
  selector:
    app: database
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: batch/v1
kind: Job
metadata:
  name: db-wait-30s
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "-1"   # runs before database itself
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: sleep
        image: busybox
        command: ["sh", "-c", "echo '‚è≥ Simulating DB init...'; sleep 30"]